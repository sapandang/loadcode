
import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id 'java'
    id "com.vanniktech.maven.publish" version "0.28.0"

}

group = 'io.github.sapandang'
version = '1.1'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

mavenPublishing {

    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)
    signAllPublications()
    coordinates("io.github.sapandang", "loadcode", "1.1")

    pom {
        name = "LoadCode"
        description = "Programmable Load Generation Tool"
        inceptionYear = "2025"
        url = "https://github.com/sapandang/loadcode"
        licenses {
            license {
                name = "The Apache License, Version 2.0"
                url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                distribution = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }
        developers {
            developer {
                id = "sapandang"
                name = "sapan"
                url = "https://github.com/sapandang/"
            }
        }
        scm {
            url = "https://github.com/sapandang/loadcode"
            connection = "scm:git:git:github.com/sapandang/loadcode.git"
            developerConnection = "scm:git:ssh://git@github.com/sapandang/loadcode.git"
        }
    }
}



task customFatJar(type: Jar) {
    manifest {
        //attributes 'Main-Class': 'skd.requests.Requests'
    }
    archiveBaseName = 'skd-loadcode'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


dependencies {

    implementation 'com.h2database:h2:2.2.224'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}